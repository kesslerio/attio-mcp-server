{
  "name": "attio-mcp-server",
  "version": "0.0.2",
  "description": "A Model Context Protocol server that connects Attio to LLMs",
  "main": "dist/index.js",
  "module": "dist/index.js",
  "type": "module",
  "access": "public",
  "bin": {
    "attio-mcp-server": "dist/index.js",
    "attio-discover": "dist/cli/discover.js"
  },
  "scripts": {
    "clean": "shx rm -rf dist",
    "build": "tsc",
    "postbuild": "shx chmod +x dist/*.js",
    "check": "wireit",
    "build:watch": "tsc --watch",
    "lint:check": "wireit",
    "lint:fix": "wireit",
    "format": "npx prettier --write --config .prettierrc src/**/*.{ts,js} test/**/*.{ts,js} *.ts *.js",
    "check:format": "npx prettier --check --config .prettierrc src/**/*.{ts,js} test/**/*.{ts,js} *.ts *.js",
    "test": "vitest",
    "test:watch": "vitest --watch",
    "test:offline": "vitest --config vitest.config.offline.ts",
    "check:offline": "tsc --project tsconfig.offline.json --noEmit",
    "codex:setup": "./scripts/codex-env-setup.sh",
    "codex:verify": "./scripts/verify-codex-env.sh",
    "test:people": "node test/objects/people.test.js",
    "test:search": "node test/api/search.test.js",
    "test:lists": "node test/objects/lists.test.js",
    "setup-hooks": "chmod +x build/install-hooks.sh && ./build/install-hooks.sh",
    "postinstall": "npm run setup-hooks",
    "test-hooks": "chmod +x build/test-hooks.sh && ./build/test-hooks.sh",
    "docker:build": "chmod +x scripts/docker-build.sh && ./scripts/docker-build.sh",
    "docker:run": "docker run -p 3000:3000 -e ATTIO_API_KEY=${ATTIO_API_KEY} -e ATTIO_WORKSPACE_ID=${ATTIO_WORKSPACE_ID} attio-mcp-server:latest",
    "docker:compose": "docker-compose up -d",
    "docker:logs": "docker-compose logs -f",
    "docker:stop": "docker-compose down",
    "discover": "node dist/cli/discover.js",
    "discover:attributes": "node dist/cli/discover.js attributes",
    "discover:all-attributes": "node dist/cli/discover.js attributes --all",
    "discover:high-memory": "NODE_OPTIONS='--max-old-space-size=4096' node -r dotenv/config dist/cli/discover.js",
    "discover:attributes:high-memory": "NODE_OPTIONS='--max-old-space-size=4096' node -r dotenv/config dist/cli/discover.js attributes",
    "discover:all-attributes:high-memory": "NODE_OPTIONS='--max-old-space-size=4096' node -r dotenv/config dist/cli/discover.js attributes --all",
    "discover:robust": "./scripts/run-discover.sh",
    "discover:attributes:robust": "./scripts/run-discover.sh attributes",
    "discover:all-attributes:robust": "./scripts/run-discover.sh attributes --all",
    "syncpack:check": "syncpack list-mismatches",
    "syncpack:fix": "syncpack fix-mismatches",
    "check:all": "npm run check && npm run build && npm run test:offline",
    "setup:dev": "npm install && npm run build",
    "verify:env": "node -e \"console.log('Node:', process.version); console.log('NPM:', process.env.npm_version || 'unknown')\""
  },
  "files": [
    "dist"
  ],
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.4.1",
    "@types/handlebars": "^4.0.40",
    "chalk": "^5.3.0",
    "dotenv": "^16.5.0",
    "handlebars": "^4.7.8",
    "ora": "^7.0.1",
    "yargs": "^17.7.2"
  },
  "author": "@hmk",
  "license": "BSD-3-Clause",
  "devDependencies": {
    "@types/express": "^5.0.2",
    "@types/jest": "^29.5.14",
    "@types/string-similarity": "^4.0.2",
    "@types/yargs": "^17.0.33",
    "@typescript-eslint/eslint-plugin": "^7.0.0",
    "@vitest/ui": "^3.1.4",
    "axios": "^1.9.0",
    "eslint": "^8.0.0",
    "jest": "^29.7.0",
    "shx": "^0.4.0",
    "syncpack": "^13.0.4",
    "ts-jest": "^29.2.5",
    "tsx": "^4.19.2",
    "typescript": "^5.8.3",
    "vitest": "^3.1.4",
    "wireit": "^0.14.12"
  },
  "wireit": {
    "lint:check": {
      "command": "npx eslint . --ext .ts,.js",
      "files": [
        "src/**/*.{ts,js}",
        "test/**/*.{ts,js}",
        "*.ts",
        "*.js",
        ".eslintrc.cjs",
        ".eslintignore",
        "tsconfig.json",
        ".prettierrc"
      ],
      "output": []
    },
    "lint:fix": {
      "command": "npx eslint . --ext .ts,.js --fix",
      "files": [
        "src/**/*.{ts,js}",
        "test/**/*.{ts,js}",
        "*.ts",
        "*.js",
        ".eslintrc.cjs",
        ".eslintignore",
        "tsconfig.json",
        ".prettierrc"
      ],
      "output": []
    },
    "check": {
      "dependencies": [
        "syncpack:check",
        "check:format",
        "lint:check",
        "test"
      ]
    }
  }
}
