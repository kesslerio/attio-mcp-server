name: PR Analysis (Claude)

on:
  pull_request:
    types: [opened, reopened]
    paths-ignore:
      - '**.md'
      - '**.txt'
      - '.gitignore'
      - 'LICENSE'
      - 'docs/**'
      - '**.yml'
      - '**.yaml'

concurrency:
  group: pr-analysis-${{ github.event.pull_request.number }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: read

jobs:
  analyze:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    outputs:
      review_mode: ${{ steps.gate.outputs.review_mode }}
      files_count: ${{ steps.changed.outputs.all_changed_files_count }}
      should_analyze: ${{ steps.gate.outputs.should_analyze }}

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          disable-sudo: true
          egress-policy: audit
          allowed-endpoints: >
            api.github.com:443
            github.com:443
            objects.githubusercontent.com:443
            api.anthropic.com:443
            api.claude.ai:443

      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ github.token }}

      - name: Get changed files
        id: changed
        uses: tj-actions/changed-files@v45
        with:
          files_ignore: |
            **.md
            **.txt
            .gitignore
            LICENSE
            docs/**
            **.yml
            **.yaml
            package-lock.json
            yarn.lock
            pnpm-lock.yaml

      - name: PR size and analysis gate
        id: gate
        run: |
          files_count=${{ steps.changed.outputs.all_changed_files_count }}
          changed_files="${{ steps.changed.outputs.all_changed_files }}"

          echo "files_count=$files_count" >> $GITHUB_OUTPUT
          echo "changed_files=$changed_files" >> $GITHUB_OUTPUT

          # Skip analysis for very small changes (1-2 trivial files)
          if [ "$files_count" -le 2 ]; then
            echo "should_analyze=false" >> $GITHUB_OUTPUT
            echo "review_mode=skip" >> $GITHUB_OUTPUT
            echo "::notice::Skipping analysis for small change ($files_count files)"
            exit 0
          fi

          # Size-based review mode
          if [ "$files_count" -gt 150 ]; then
            echo "review_mode=summary-only" >> $GITHUB_OUTPUT
            echo "should_analyze=true" >> $GITHUB_OUTPUT
            echo "::warning::Large PR detected ($files_count files) - summary only"
          elif [ "$files_count" -gt 50 ]; then
            echo "review_mode=focused" >> $GITHUB_OUTPUT
            echo "should_analyze=true" >> $GITHUB_OUTPUT
            echo "::notice::Medium PR detected ($files_count files) - focused review"
          else
            echo "review_mode=full" >> $GITHUB_OUTPUT
            echo "should_analyze=true" >> $GITHUB_OUTPUT
            echo "::notice::Standard PR size ($files_count files) - full review"
          fi

      - name: Generate diff for analysis
        if: steps.gate.outputs.should_analyze == 'true'
        id: diff
        run: |
          # Create structured diff for Claude
          echo "Generating diff for PR analysis..."

          # Get the diff with context
          git diff origin/${{ github.base_ref }}...HEAD > full_diff.txt

          # Create analysis input JSON
          cat << 'EOF' > claude-input.json
          {
            "pr_number": "${{ github.event.pull_request.number }}",
            "pr_title": "${{ github.event.pull_request.title }}",
            "pr_body": "${{ github.event.pull_request.body }}",
            "base_ref": "${{ github.base_ref }}",
            "head_ref": "${{ github.head_ref }}",
            "files_count": ${{ steps.changed.outputs.all_changed_files_count }},
            "review_mode": "${{ steps.gate.outputs.review_mode }}",
            "changed_files": "${{ steps.changed.outputs.all_changed_files }}",
            "repository": "${{ github.repository }}",
            "pr_url": "${{ github.event.pull_request.html_url }}"
          }
          EOF

          echo "Analysis input prepared"

      - name: Run Claude Analysis
        if: steps.gate.outputs.should_analyze == 'true'
        uses: anthropics/claude-code-action@v1
        with:
          api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          model: claude-3-5-sonnet-20241022
          max_output_tokens: 2000
          mode: analysis
          timeout: 300
          prompt: |
            You are conducting a security-focused code review for an Attio MCP Server project. 

            Review Mode: ${{ steps.gate.outputs.review_mode }}
            Files Changed: ${{ steps.changed.outputs.all_changed_files_count }}

            Focus Areas (prioritize based on review mode):
            - Security vulnerabilities and credential exposure
            - API endpoint security and input validation  
            - Error handling and information disclosure
            - Authentication/authorization issues
            - Breaking API changes
            - Test coverage for new functionality

            Review Guidelines:
            - For summary-only: Focus on high-level architecture and security concerns
            - For focused: Review critical security/API files in detail
            - For full: Comprehensive review with inline suggestions

            **Only review the diff changes, not entire files.**

            Output a markdown summary with:
            - Security Risk Assessment (High/Medium/Low)
            - Key Issues Found (if any)
            - Recommendations
            - Files Requiring Attention

            Keep total response under 2000 tokens.

          # Restrict to GitHub tools only for security
          allowed_tools: |
            mcp__github__*

          # Only analyze changed files
          files: ${{ steps.changed.outputs.all_changed_files }}

      - name: Upload analysis results
        if: steps.gate.outputs.should_analyze == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: claude-analysis-${{ github.event.pull_request.number }}
          path: |
            claude-input.json
            full_diff.txt
          retention-days: 7

      - name: Create Check Run
        if: steps.gate.outputs.should_analyze == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const reviewMode = '${{ steps.gate.outputs.review_mode }}';
            const filesCount = ${{ steps.changed.outputs.all_changed_files_count }};

            const conclusion = reviewMode === 'summary-only' ? 'neutral' : 'success';
            const title = `Claude Analysis - ${reviewMode} (${filesCount} files)`;

            await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'Claude Security Review',
              head_sha: context.payload.pull_request.head.sha,
              status: 'completed',
              conclusion: conclusion,
              output: {
                title: title,
                summary: `PR analyzed in ${reviewMode} mode. ${filesCount} files changed.`,
                text: `Analysis completed for PR #${{ github.event.pull_request.number }}.
                
                **Review Mode**: ${reviewMode}
                **Files Changed**: ${filesCount}
                **Status**: Analysis uploaded for comment workflow
                
                Check the PR comments for detailed analysis results.`
              }
            });
