name: Claude Slash Commands

on:
  issue_comment:
    types: [created]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  handle-commands:
    if: |
      github.event.issue.pull_request &&
      (contains(github.event.comment.body, '/claude') || contains(github.event.comment.body, '@claude')) &&
      (github.event.comment.author_association == 'MEMBER' || 
       github.event.comment.author_association == 'COLLABORATOR' || 
       github.event.comment.author_association == 'OWNER')
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          disable-sudo: true
          egress-policy: audit

      - name: React to comment
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: ${{ github.event.comment.id }},
              content: 'eyes'
            });

      - name: Parse command
        id: parse
        run: |
          comment_body="${{ github.event.comment.body }}"

          if [[ "$comment_body" =~ /claude[[:space:]]+review ]] || [[ "$comment_body" =~ @claude.*review ]]; then
            echo "command=review" >> $GITHUB_OUTPUT
          else
            echo "command=unknown" >> $GITHUB_OUTPUT
          fi

      - name: Run Claude re-analysis
        if: steps.parse.outputs.command == 'review'
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          prompt: |
            Re-analyze this PR based on user request from @${{ github.event.comment.user.login }}.

            Focus on:
            - Security vulnerabilities and credential exposure
            - API endpoint security and input validation
            - Authentication/authorization concerns
            - Breaking changes or compatibility issues
            - Error handling and information disclosure

            Provide a comprehensive security review with specific file:line references
            and actionable recommendations.

      - name: Mark as processed
        if: steps.parse.outputs.command == 'review'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: ${{ github.event.comment.id }},
              content: '+1'
            });
