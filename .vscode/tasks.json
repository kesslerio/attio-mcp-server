{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Build",
      "type": "npm",
      "script": "build",
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "problemMatcher": "$tsc",
      "presentation": {
        "echo": true,
        "reveal": "silent",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": false,
        "clear": true
      }
    },
    
    {
      "label": "Build Watch",
      "type": "npm",
      "script": "build:watch",
      "isBackground": true,
      "problemMatcher": "$tsc-watch",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      }
    },
    
    {
      "label": "Clean",
      "type": "npm",
      "script": "clean",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "silent",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": false,
        "clear": true
      }
    },
    
    {
      "label": "Test All",
      "type": "npm",
      "script": "test",
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      }
    },
    
    {
      "label": "Test Watch",
      "type": "npm",
      "script": "test:watch",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      }
    },
    
    {
      "label": "Test Unit Only",
      "type": "npm",
      "script": "test:offline",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      }
    },
    
    {
      "label": "Test Integration",
      "type": "npm",
      "script": "test:integration",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      }
    },
    
    {
      "label": "Test E2E",
      "type": "npm",
      "script": "e2e",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      }
    },
    
    {
      "label": "Test Coverage",
      "type": "npm",
      "script": "test:coverage",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      }
    },
    
    {
      "label": "Lint Check",
      "type": "npm",
      "script": "lint:check",
      "problemMatcher": "$eslint-stylish",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": false,
        "clear": true
      }
    },
    
    {
      "label": "Lint Fix",
      "type": "npm",
      "script": "lint:fix",
      "problemMatcher": "$eslint-stylish",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": false,
        "clear": true
      }
    },
    
    {
      "label": "Format Code",
      "type": "npm",
      "script": "format",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "silent",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": false,
        "clear": true
      }
    },
    
    {
      "label": "Check Format",
      "type": "npm",
      "script": "check:format",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": false,
        "clear": true
      }
    },
    
    {
      "label": "Full Check",
      "type": "npm",
      "script": "check",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      }
    },
    
    {
      "label": "Docker Build",
      "type": "npm",
      "script": "docker:build",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      }
    },
    
    {
      "label": "Docker Compose Up",
      "type": "npm",
      "script": "docker:compose",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      }
    },
    
    {
      "label": "Docker Compose Down",
      "type": "npm",
      "script": "docker:stop",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": false,
        "clear": true
      }
    },
    
    {
      "label": "Discover Attributes",
      "type": "npm",
      "script": "discover:attributes",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      }
    },
    
    {
      "label": "Setup Development Environment",
      "type": "npm",
      "script": "setup",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      }
    },
    
    {
      "label": "Create Test File",
      "type": "shell",
      "command": "./scripts/create-test.sh",
      "args": [
        "${input:testFileName}"
      ],
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": false,
        "clear": true
      }
    },
    
    {
      "label": "Pre-commit Check",
      "type": "shell",
      "command": "npm run lint:check && npm run check:format && npm run build && npm run test:offline",
      "group": "build",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      }
    },
    
    {
      "label": "Performance Test",
      "type": "npm",
      "script": "test:performance",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      }
    },
    
    {
      "label": "E2E Setup",
      "type": "npm",
      "script": "e2e:setup",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      }
    },
    
    {
      "label": "E2E Cleanup",
      "type": "npm",
      "script": "e2e:cleanup",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": false,
        "clear": true
      }
    }
  ],
  
  "inputs": [
    {
      "id": "testFileName",
      "type": "promptString",
      "description": "Enter the name for the test file (without extension)",
      "default": "my-component"
    }
  ]
}