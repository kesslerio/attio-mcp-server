#!/bin/bash

# prepare-commit-msg hook to remove Claude Code and AI attribution messages
# Place this file in .git/hooks/prepare-commit-msg and make executable with: chmod +x .git/hooks/prepare-commit-msg

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

COMMIT_MSG_FILE=$1
COMMIT_SOURCE=$2

# Skip if not a normal commit message (e.g. merge, squash, etc.)
if [ "$COMMIT_SOURCE" != "" ] && [ "$COMMIT_SOURCE" != "message" ]; then
  exit 0
fi

# Store the original content of the commit message
ORIGINAL_COMMIT_MSG=$(cat "$COMMIT_MSG_FILE")

# Save it for pre-commit hook to reference
echo "$ORIGINAL_COMMIT_MSG" > "$HOME/.git_commit_msg.txt"

# Patterns to check for
ATTRIBUTION_PATTERNS=(
  "Generated with Claude"
  "Generated with \[Claude Code\]"
  "Co-Authored-By: Claude"
  "noreply@anthropic.com"
  "Generated by AI"
  "AI-generated"
  "Generated by Claude"
  "ðŸ¤– Generated"
  "Created with Claude"
)

# Check for attribution patterns
for pattern in "${ATTRIBUTION_PATTERNS[@]}"; do
  if echo "$ORIGINAL_COMMIT_MSG" | grep -Eq "$pattern"; then
    echo -e "${YELLOW}Warning:${NC} Commit message contains AI attribution: '${YELLOW}$pattern${NC}'"
    echo -e "Automatically removing attribution message..."
    
    # Remove the attribution message
    CLEANED_MSG=$(echo "$ORIGINAL_COMMIT_MSG" | sed -E "s/.*$pattern.*//g" | sed -e '/^$/d')
    
    # If the cleaned message is empty, provide a placeholder
    if [ -z "$CLEANED_MSG" ]; then
      echo "Please provide a meaningful commit message" > "$COMMIT_MSG_FILE"
    else
      echo "$CLEANED_MSG" > "$COMMIT_MSG_FILE"
    fi
    
    echo -e "${GREEN}âœ… Attribution message has been removed. Please review the commit message.${NC}"
  fi
done

exit 0